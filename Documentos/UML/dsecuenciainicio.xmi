<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2005-11-16T23:09:25" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.4.2</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" xmi.id="3" isRoot="false" isAbstract="false" name="datatype" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2" isRoot="false" isAbstract="false" name="int" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4" isRoot="false" isAbstract="false" name="char" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5" isRoot="false" isAbstract="false" name="boolean" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" xmi.id="6" isRoot="false" isAbstract="false" name="float" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" xmi.id="7" isRoot="false" isAbstract="false" name="double" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" xmi.id="8" isRoot="false" isAbstract="false" name="byte" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" xmi.id="9" isRoot="false" isAbstract="false" name="short" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" xmi.id="10" isRoot="false" isAbstract="false" name="string" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" xmi.id="19" isRoot="false" isAbstract="false" name="void" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="13" isRoot="false" isAbstract="false" name="Medico" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="45" isRoot="false" isAbstract="false" name="inicio" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="46" isRoot="false" value="" type="2" isAbstract="false" name="clave" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="14" isRoot="false" isAbstract="false" name="PDA" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="24" isRoot="false" isAbstract="false" name="aceptacion" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="27" isRoot="false" isAbstract="false" name="menu" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="60" isRoot="false" isAbstract="false" name="inicio" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="61" isRoot="false" value="" type="2" isAbstract="false" name="clave" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="15" isRoot="false" isAbstract="false" name="ServidorHospital" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="18" isRoot="false" isAbstract="false" name="entrar" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter comment="El PDA envia al servidor la clave para que la confirme en la base de datos del hospital" isSpecification="false" isLeaf="false" visibility="private" xmi.id="20" isRoot="false" value="" type="2" isAbstract="false" name="clave" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29" isRoot="false" isAbstract="false" name="confirmaMedico" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="63" type="5" />
        <UML:Parameter comment="El servidor busca en su base de datos la existencia del medico que ha iniciado sesion con la clave que se pasa como parametro" isSpecification="false" isLeaf="false" visibility="private" xmi.id="30" isRoot="false" value="" type="2" isAbstract="false" name="clave" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="11" documentation="" uniqueid="63" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="912" snapy="10" showatts="1" xmi.id="11" documentation="" type="403" showops="1" showpackage="0" name="dsecuenciainicio" localid="899997" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="569" >
    <widgets>
     <objectwidget usesdiagramfillcolour="0" width="64" usesdiagramusefillcolour="0" x="96" linecolour="#ff0000" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="62" usefillcolor="1" isinstance="0" xmi.id="13" decon="0" localid="899999" multipleinstance="0" drawasactor="1" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="294" linecolour="none" y="75" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="14" decon="0" localid="899998" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="117" usesdiagramusefillcolour="1" x="471" linecolour="none" y="75" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="15" decon="0" localid="899997" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
    </widgets>
    <messages>
     <messagewidget usesdiagramfillcolour="1" width="208" usesdiagramusefillcolour="1" x="320" linecolour="none" y="175" operation="18" linewidth="none" usesdiagramlinewidth="1" widgetbid="899997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="2" textid="17" widgetaid="899998" isinstance="0" xmi.id="16" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="121" usesdiagramusefillcolour="1" x="325" linecolour="none" y="154" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="17" text="2: entrar(clave : int)" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="527" linecolour="none" y="247" operation="29" linewidth="none" usesdiagramlinewidth="1" widgetbid="899997" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="3" textid="28" widgetaid="899997" isinstance="0" xmi.id="21" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="237" usesdiagramusefillcolour="1" x="532" linecolour="none" y="226" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="28" text="3: confirmaMedico(clave : int) : boolean" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="208" usesdiagramusefillcolour="1" x="320" linecolour="none" y="294" operation="24" linewidth="none" usesdiagramlinewidth="1" widgetbid="899998" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="4" textid="23" widgetaid="899997" isinstance="0" xmi.id="22" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="94" usesdiagramusefillcolour="1" x="331" linecolour="none" y="273" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="23" text="4: aceptacion()" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="317" linecolour="none" y="320" operation="27" linewidth="none" usesdiagramlinewidth="1" widgetbid="899998" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="5" textid="26" widgetaid="899998" isinstance="0" xmi.id="25" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="63" usesdiagramusefillcolour="1" x="322" linecolour="none" y="299" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="26" text="5: menu()" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="189" usesdiagramusefillcolour="1" x="129" linecolour="none" y="130" operation="60" linewidth="none" usesdiagramlinewidth="1" widgetbid="899998" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="1" textid="43" widgetaid="899999" isinstance="0" xmi.id="33" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="118" usesdiagramusefillcolour="1" x="134" linecolour="none" y="109" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="43" text="1: inicio(clave : int)" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
    </messages>
    <associations/>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Views" >
    <listitem open="1" type="801" label="Logical View" >
     <listitem open="1" type="813" id="13" >
      <listitem open="1" type="815" id="45" />
     </listitem>
     <listitem open="1" type="813" id="14" >
      <listitem open="0" type="815" id="24" />
      <listitem open="0" type="815" id="27" />
      <listitem open="0" type="815" id="60" />
     </listitem>
     <listitem open="1" type="813" id="15" >
      <listitem open="0" type="815" id="18" />
      <listitem open="0" type="815" id="29" />
     </listitem>
     <listitem open="0" type="830" label="Datatypes" >
      <listitem open="1" type="829" id="5" />
      <listitem open="1" type="829" id="8" />
      <listitem open="1" type="829" id="4" />
      <listitem open="1" type="829" id="7" />
      <listitem open="1" type="829" id="6" />
      <listitem open="1" type="829" id="2" />
      <listitem open="1" type="829" id="9" />
      <listitem open="1" type="829" id="10" />
      <listitem open="1" type="829" id="19" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" label="Use Case View" />
    <listitem open="1" type="821" label="Component View" />
    <listitem open="1" type="827" label="Deployment View" />
    <listitem open="1" type="836" label="Entity Relationship Model" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Java" >
    <classifiercodedocument writeOutCode="true" package="" id="13" parent_class="13" fileExt=".java" fileName="Medico" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="13" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class Medico&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Medico ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks>
            <codeoperation parent_id="45" tag="operation_45" canDelete="false" indentLevel="1" >
             <header>
              <javacodedocumentation tag="" indentLevel="1" text="&amp;#010;@param clave &amp;#010;@return   " />
             </header>
            </codeoperation>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Medico.java - Copyright root&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on mié nov 16 2005 at 23:08:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="14" parent_class="14" fileExt=".java" fileName="PDA" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="14" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class PDA&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public PDA ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks>
            <codeoperation parent_id="24" tag="operation_24" canDelete="false" indentLevel="1" >
             <header>
              <javacodedocumentation tag="" indentLevel="1" text="&amp;#010;@return   " />
             </header>
            </codeoperation>
            <codeoperation parent_id="27" tag="operation_27" canDelete="false" indentLevel="1" >
             <header>
              <javacodedocumentation tag="" indentLevel="1" text="&amp;#010;@return   " />
             </header>
            </codeoperation>
            <codeoperation parent_id="60" tag="operation_60" canDelete="false" indentLevel="1" >
             <header>
              <javacodedocumentation tag="" indentLevel="1" text="&amp;#010;@param clave &amp;#010;@return void  " />
             </header>
            </codeoperation>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			PDA.java - Copyright root&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on mié nov 16 2005 at 23:09:20&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="15" parent_class="15" fileExt=".java" fileName="ServidorHospital" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="15" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class ServidorHospital&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ServidorHospital ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks>
            <codeoperation parent_id="18" tag="operation_18" canDelete="false" indentLevel="1" >
             <header>
              <javacodedocumentation tag="" indentLevel="1" text="&amp;#010;@param clave El PDA envia al servidor la clave para que la confirme en la base de datos del hospital&amp;#010;@return   " />
             </header>
            </codeoperation>
            <codeoperation parent_id="29" tag="operation_29" canDelete="false" indentLevel="1" >
             <header>
              <javacodedocumentation tag="" indentLevel="1" text="&amp;#010;@param clave El servidor busca en su base de datos la existencia del medico que ha iniciado sesion con la clave que se pasa como parametro&amp;#010;@return boolean  " />
             </header>
            </codeoperation>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ServidorHospital.java - Copyright root&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on mié nov 16 2005 at 23:08:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="ANTDOC" fileExt=".xml" fileName="build" >
     <textblocks>
      <codeblockwithcomments tag="xmlDecl" text="&lt;?xml version=&quot;1.0&quot;?>" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <xmlelementblock nodeName="project" tag="projectDecl" canDelete="false" >
       <header>
        <codecomment tag="" text="Java ANT build document" />
       </header>
       <textblocks/>
      </xmlelementblock>
     </textblocks>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
